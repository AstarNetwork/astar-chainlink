{
  "address": "0xB808614A6F17e11B63c9108443314F1C9f625c4A",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_aggregatorProxyAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "getThePrice",
      "outputs": [
        {
          "internalType": "uint80",
          "name": "",
          "type": "uint80"
        },
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x078beb46c82d77ac5dbf3a9e6d71df6a51c83814df13a8d73607b6683e17bd0e",
  "receipt": {
    "to": null,
    "from": "0xc19Fe528555B383Dc0DCa0e48eC0170f4c52790F",
    "contractAddress": "0xB808614A6F17e11B63c9108443314F1C9f625c4A",
    "transactionIndex": 1,
    "gasUsed": "174252",
    "logsBloom": "0x
    "blockHash": "0xfa7d75c4a5c5a5d2e61b2c98ae1a58676a96c3b5950265df5dc59c95a42ff774",
    "transactionHash": "0x078beb46c82d77ac5dbf3a9e6d71df6a51c83814df13a8d73607b6683e17bd0e",
    "logs": [],
    "blockNumber": 1354905,
    "cumulativeGasUsed": "407521",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8f981Ae7D500aaC846DE867C9C5ee519937c2375"
  ],
  "numDeployments": 1,
  "solcInputHash": "19320a6460f8fca170550473413cd921",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_aggregatorProxyAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getThePrice\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getThePrice()\":{\"notice\":\"Returns the latest price\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PriceConsumer.sol\":\"PriceConsumer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/PriceConsumer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n\\ncontract PriceConsumer {\\n\\n    AggregatorV3Interface internal priceFeed;\\n\\n    // Aggregator Proxy contract address\\n    constructor(address _aggregatorProxyAddress) {\\n        priceFeed = AggregatorV3Interface(_aggregatorProxyAddress);\\n    }\\n\\n    /**\\n     * Returns the latest price\\n     */\\n    function getThePrice() public view returns (uint80, int) {\\n        (\\n            uint80 roundID, \\n            int price,\\n            uint startedAt,\\n            uint timeStamp,\\n            uint80 answeredInRound\\n        ) = priceFeed.latestRoundData();\\n        return (roundID, price);\\n    }\\n}\\n\",\"keccak256\":\"0x6c99bf31957957dc7604bbfa1b1eae60e2100e4ae1721721ff3dbaeb7dbf532b\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161025238038061025283398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6101bf806100936000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80638c3c9a5514610030575b600080fd5b61003861005e565b6040805169ffffffffffffffffffff909316835260208301919091520160405180910390f35b60008060008060008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156100d057600080fd5b505afa1580156100e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101089190610139565b50929a91995090975050505050505050565b805169ffffffffffffffffffff8116811461013457600080fd5b919050565b600080600080600060a0868803121561015157600080fd5b61015a8661011a565b945060208601519350604086015192506060860151915061017d6080870161011a565b9050929550929590935056fea2646970667358221220e96c167c9869bae85000b314c11c9338bda8f097ae8781c0b9b7509ff50f6cd164736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c80638c3c9a5514610030575b600080fd5b61003861005e565b6040805169ffffffffffffffffffff909316835260208301919091520160405180910390f35b60008060008060008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156100d057600080fd5b505afa1580156100e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101089190610139565b50929a91995090975050505050505050565b805169ffffffffffffffffffff8116811461013457600080fd5b919050565b600080600080600060a0868803121561015157600080fd5b61015a8661011a565b945060208601519350604086015192506060860151915061017d6080870161011a565b9050929550929590935056fea2646970667358221220e96c167c9869bae85000b314c11c9338bda8f097ae8781c0b9b7509ff50f6cd164736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getThePrice()": {
        "notice": "Returns the latest price"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 51,
        "contract": "contracts/PriceConsumer.sol:PriceConsumer",
        "label": "priceFeed",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      }
    }
  }
}